//
//  CPMJLEncryptionRequest.swift
//
//
//  Created by Evan Anderson on 8/3/23.
//

import Foundation

extension ClientPacket.Mojang.Java.Login {
    struct EncryptionRequest : ClientPacketMojangJavaLoginProtocol {
        public static let id:ClientPacket.Mojang.Java.Login = ClientPacket.Mojang.Java.Login.encryption_request
        
        public static func parse(_ packet: GeneralPacketMojang) throws -> Self {
            let server_id:String = try packet.read_string()
            let public_key_length:VariableIntegerJava = try packet.read_var_int()
            let public_key:[UInt8] = try packet.read_byte_array(bytes: public_key_length)
            let verify_token_length:VariableIntegerJava = try packet.read_var_int()
            let verify_token:[UInt8] = try packet.read_byte_array(bytes: verify_token_length)
            return Self(server_id: server_id, public_key_length: public_key_length, public_key: public_key, verify_token_length: verify_token_length, verify_token: verify_token)
        }
        
        /// Appears to be empty.
        public let server_id:String
        /// Length of Public Key.
        public let public_key_length:VariableIntegerJava
        /// The server's public key, in bytes.
        public let public_key:[UInt8]
        /// Length of Verify Token. Always 4 for Notchian servers.
        public let verify_token_length:VariableIntegerJava
        /// A sequence of random bytes generated by the server.
        public let verify_token:[UInt8]
        
        init(server_id: String, public_key_length: VariableIntegerJava, public_key: [UInt8], verify_token_length: VariableIntegerJava, verify_token: [UInt8]) {
            self.server_id = server_id
            self.public_key_length = public_key_length
            self.public_key = public_key
            self.verify_token_length = verify_token_length
            self.verify_token = verify_token
        }
        init(server_id: String, public_key: [UInt8], verify_token: [UInt8]) {
            self.server_id = server_id
            self.public_key_length = VariableIntegerJava(value: Int32(public_key.count))
            self.public_key = public_key
            self.verify_token_length = VariableIntegerJava(value: Int32(verify_token.count))
            self.verify_token = verify_token
        }
        
        public func encoded_values() throws -> [(any PacketEncodableMojangJava)?] {
            var array:[(any PacketEncodableMojangJava)?] = [server_id, public_key_length]
            array.append(contentsOf: public_key)
            array.append(verify_token_length)
            array.append(contentsOf: verify_token)
            return array
        }
    }
}
